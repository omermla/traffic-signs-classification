{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":657000,"sourceType":"datasetVersion","datasetId":327959}],"dockerImageVersionId":31090,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:16:23.700822Z","iopub.execute_input":"2025-09-23T14:16:23.701108Z","iopub.status.idle":"2025-09-23T14:16:23.717297Z","shell.execute_reply.started":"2025-09-23T14:16:23.701087Z","shell.execute_reply":"2025-09-23T14:16:23.716563Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/traffic-signs-preprocessed/mean_image_rgb.pickle\n/kaggle/input/traffic-signs-preprocessed/data5.pickle\n/kaggle/input/traffic-signs-preprocessed/data4.pickle\n/kaggle/input/traffic-signs-preprocessed/data7.pickle\n/kaggle/input/traffic-signs-preprocessed/data8.pickle\n/kaggle/input/traffic-signs-preprocessed/data1.pickle\n/kaggle/input/traffic-signs-preprocessed/data3.pickle\n/kaggle/input/traffic-signs-preprocessed/test.pickle\n/kaggle/input/traffic-signs-preprocessed/mean_image_gray.pickle\n/kaggle/input/traffic-signs-preprocessed/data6.pickle\n/kaggle/input/traffic-signs-preprocessed/data0.pickle\n/kaggle/input/traffic-signs-preprocessed/valid.pickle\n/kaggle/input/traffic-signs-preprocessed/data2.pickle\n/kaggle/input/traffic-signs-preprocessed/labels.pickle\n/kaggle/input/traffic-signs-preprocessed/datasets_preparing.py\n/kaggle/input/traffic-signs-preprocessed/std_gray.pickle\n/kaggle/input/traffic-signs-preprocessed/std_rgb.pickle\n/kaggle/input/traffic-signs-preprocessed/label_names.csv\n/kaggle/input/traffic-signs-preprocessed/train.pickle\n","output_type":"stream"}],"execution_count":25},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"# Trafik İşaretleri Sınıflandırma Projesi\n\n## Proje Özeti\nBu proje, Akbank Derin Öğrenme Bootcamp kapsamında geliştirilmiştir. Trafik İşaretleri veri setini kullanarak 43 farklı trafik işaretini sınıflandırmak için bir CNN modeli oluşturulmuştur. Amaç, veri ön işleme, model eğitimi, değerlendirme ve görselleştirme becerilerini göstermektir.\n\n## Adım 1: Kütüphaneleri Yükleme\nAşağıda gerekli kütüphaneler yükleniyor.","metadata":{}},{"cell_type":"code","source":"# Gerekli kütüphaneleri yükle\n!pip install tensorflow==2.15.0\nimport os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'  # Hata ve uyarı mesajlarını gizler\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.metrics import confusion_matrix, classification_report\nimport pickle\nimport os","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:16:23.718586Z","iopub.execute_input":"2025-09-23T14:16:23.719093Z","iopub.status.idle":"2025-09-23T14:16:26.886787Z","shell.execute_reply.started":"2025-09-23T14:16:23.719075Z","shell.execute_reply":"2025-09-23T14:16:26.886065Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: tensorflow==2.15.0 in /usr/local/lib/python3.11/dist-packages (2.15.0)\nRequirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (1.4.0)\nRequirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (1.6.3)\nRequirement already satisfied: flatbuffers>=23.5.26 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (25.2.10)\nRequirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (0.6.0)\nRequirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (0.2.0)\nRequirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (3.14.0)\nRequirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (18.1.1)\nRequirement already satisfied: ml-dtypes~=0.2.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (0.2.0)\nRequirement already satisfied: numpy<2.0.0,>=1.23.5 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (1.26.4)\nRequirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (3.4.0)\nRequirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (25.0)\nRequirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (3.20.3)\nRequirement already satisfied: setuptools in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (75.2.0)\nRequirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (1.17.0)\nRequirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (3.1.0)\nRequirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (4.14.0)\nRequirement already satisfied: wrapt<1.15,>=1.11.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (1.14.2)\nRequirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (0.37.1)\nRequirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (1.73.1)\nRequirement already satisfied: tensorboard<2.16,>=2.15 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (2.15.2)\nRequirement already satisfied: tensorflow-estimator<2.16,>=2.15.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (2.15.0)\nRequirement already satisfied: keras<2.16,>=2.15.0 in /usr/local/lib/python3.11/dist-packages (from tensorflow==2.15.0) (2.15.0)\nRequirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.11/dist-packages (from astunparse>=1.6.0->tensorflow==2.15.0) (0.45.1)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2.4.1)\nRequirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.16,>=2.15->tensorflow==2.15.0) (2.40.3)\nRequirement already satisfied: google-auth-oauthlib<2,>=0.5 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.16,>=2.15->tensorflow==2.15.0) (1.2.2)\nRequirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.16,>=2.15->tensorflow==2.15.0) (3.8.2)\nRequirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.16,>=2.15->tensorflow==2.15.0) (2.32.4)\nRequirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.16,>=2.15->tensorflow==2.15.0) (0.7.2)\nRequirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.11/dist-packages (from tensorboard<2.16,>=2.15->tensorflow==2.15.0) (3.1.3)\nRequirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.11/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (5.5.2)\nRequirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.11/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (0.4.2)\nRequirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.11/dist-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (4.9.1)\nRequirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.11/dist-packages (from google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (2.0.0)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (2025.6.15)\nRequirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.11/dist-packages (from werkzeug>=1.0.1->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (3.0.2)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy<2.0.0,>=1.23.5->tensorflow==2.15.0) (2024.2.0)\nRequirement already satisfied: pyasn1<0.7.0,>=0.6.1 in /usr/local/lib/python3.11/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (0.6.1)\nRequirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.11/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow==2.15.0) (3.3.1)\n","output_type":"stream"}],"execution_count":26},{"cell_type":"code","source":"import os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom sklearn.metrics import confusion_matrix, classification_report\nimport pickle\nimport os\nprint(\"TensorFlow sürümü:\", tf.__version__)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:16:26.888312Z","iopub.execute_input":"2025-09-23T14:16:26.888594Z","iopub.status.idle":"2025-09-23T14:16:26.893282Z","shell.execute_reply.started":"2025-09-23T14:16:26.888570Z","shell.execute_reply":"2025-09-23T14:16:26.892637Z"}},"outputs":[{"name":"stdout","text":"TensorFlow sürümü: 2.15.0\n","output_type":"stream"}],"execution_count":27},{"cell_type":"markdown","source":"## Adım 2: Veri Setini Yükleme ve Ön İşleme\nBu bölümde, Trafik İşaretleri veri setini yüklüyoruz, normalleştiriyoruz, veri çoğaltma uyguluyoruz ve sınıf dağılımını görselleştiriyoruz.","metadata":{}},{"cell_type":"code","source":"import os\ndata_path = '/kaggle/input/traffic-signs-preprocessed'\nprint(os.listdir(data_path))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:16:26.894907Z","iopub.execute_input":"2025-09-23T14:16:26.895116Z","iopub.status.idle":"2025-09-23T14:16:26.899141Z","shell.execute_reply.started":"2025-09-23T14:16:26.895102Z","shell.execute_reply":"2025-09-23T14:16:26.898470Z"}},"outputs":[{"name":"stdout","text":"['mean_image_rgb.pickle', 'data5.pickle', 'data4.pickle', 'data7.pickle', 'data8.pickle', 'data1.pickle', 'data3.pickle', 'test.pickle', 'mean_image_gray.pickle', 'data6.pickle', 'data0.pickle', 'valid.pickle', 'data2.pickle', 'labels.pickle', 'datasets_preparing.py', 'std_gray.pickle', 'std_rgb.pickle', 'label_names.csv', 'train.pickle']\n","output_type":"stream"}],"execution_count":28},{"cell_type":"code","source":"# Veri setini yükle\ndata_path = '/kaggle/input/traffic-signs-preprocessed'\nwith open(os.path.join(data_path, 'train.pickle'), 'rb') as f:\n    train_data = pickle.load(f)\nwith open(os.path.join(data_path, 'valid.pickle'), 'rb') as f:\n    valid_data = pickle.load(f)\nwith open(os.path.join(data_path, 'test.pickle'), 'rb') as f:\n    test_data = pickle.load(f)\n\nX_train, y_train = train_data['features'], train_data['labels']\nX_valid, y_valid = valid_data['features'], valid_data['labels']\nX_test, y_test = test_data['features'], test_data['labels']\n\n# Görüntüleri normalleştir (0-1 aralığına)\nX_train = X_train / 255.0\nX_valid = X_valid / 255.0\nX_test = X_test / 255.0\n\n# Veri seti istatistiklerini yazdır\nprint(f\"Eğitim örnekleri: {X_train.shape[0]}, Doğrulama: {X_valid.shape[0]}, Test: {X_test.shape[0]}\")\nprint(f\"Görüntü boyutu: {X_train.shape[1:]}\")\nprint(f\"Sınıf sayısı: {len(np.unique(y_train))}\")\n\n# Sınıf dağılımını görselleştir\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(10, 5))\nsns.countplot(x=y_train)\nplt.title('Eğitim Setinde Sınıf Dağılımı')\nplt.xlabel('Sınıf')\nplt.ylabel('Sayı')\nplt.show()\n\n# Veri çoğaltma\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\ntrain_datagen = ImageDataGenerator(\n    rotation_range=10,\n    zoom_range=0.1,\n    width_shift_range=0.1,\n    height_shift_range=0.1,\n    horizontal_flip=False,\n    fill_mode='nearest'\n)\nvalid_datagen = ImageDataGenerator()  # Doğrulama/test için çoğaltma yok\n\ntrain_generator = train_datagen.flow(X_train, y_train, batch_size=32)\nvalid_generator = valid_datagen.flow(X_valid, y_valid, batch_size=32)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:16:26.899895Z","iopub.execute_input":"2025-09-23T14:16:26.900143Z","iopub.status.idle":"2025-09-23T14:16:28.054293Z","shell.execute_reply.started":"2025-09-23T14:16:26.900123Z","shell.execute_reply":"2025-09-23T14:16:28.053458Z"}},"outputs":[{"name":"stdout","text":"Eğitim örnekleri: 34799, Doğrulama: 4410, Test: 12630\nGörüntü boyutu: (32, 32, 3)\nSınıf sayısı: 43\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":29},{"cell_type":"markdown","source":"## Adım 3: CNN Modelini Oluşturma ve Eğitme\nBu bölümde, trafik işaretlerini sınıflandırmak için bir CNN modeli oluşturuyoruz, derliyoruz ve eğitiyoruz.","metadata":{}},{"cell_type":"code","source":"# CNN modelini oluştur\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n\nmodel = Sequential([\n    Conv2D(32, (3, 3), activation='relu', input_shape=X_train.shape[1:]),\n    MaxPooling2D((2, 2)),\n    Conv2D(64, (3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Conv2D(128, (3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Flatten(),\n    Dense(128, activation='relu'),\n    Dropout(0.5),\n    Dense(43, activation='softmax')\n])\n\n# Modeli derle\nmodel.compile(optimizer='adam', \n              loss='sparse_categorical_crossentropy', \n              metrics=['accuracy'])\n\n# Model özetini göster\nmodel.summary()\n\n# Modeli eğit\nhistory = model.fit(\n    train_generator,\n    epochs=20,\n    validation_data=valid_generator,\n    verbose=1\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:16:28.055216Z","iopub.execute_input":"2025-09-23T14:16:28.055435Z","iopub.status.idle":"2025-09-23T14:26:31.778772Z","shell.execute_reply.started":"2025-09-23T14:16:28.055417Z","shell.execute_reply":"2025-09-23T14:26:31.778003Z"}},"outputs":[{"name":"stdout","text":"Model: \"sequential_1\"\n_________________________________________________________________\n Layer (type)                Output Shape              Param #   \n=================================================================\n conv2d_2 (Conv2D)           (None, 30, 30, 32)        896       \n                                                                 \n max_pooling2d_2 (MaxPoolin  (None, 15, 15, 32)        0         \n g2D)                                                            \n                                                                 \n conv2d_3 (Conv2D)           (None, 13, 13, 64)        18496     \n                                                                 \n max_pooling2d_3 (MaxPoolin  (None, 6, 6, 64)          0         \n g2D)                                                            \n                                                                 \n conv2d_4 (Conv2D)           (None, 4, 4, 128)         73856     \n                                                                 \n max_pooling2d_4 (MaxPoolin  (None, 2, 2, 128)         0         \n g2D)                                                            \n                                                                 \n flatten_1 (Flatten)         (None, 512)               0         \n                                                                 \n dense_2 (Dense)             (None, 128)               65664     \n                                                                 \n dropout_1 (Dropout)         (None, 128)               0         \n                                                                 \n dense_3 (Dense)             (None, 43)                5547      \n                                                                 \n=================================================================\nTotal params: 164459 (642.42 KB)\nTrainable params: 164459 (642.42 KB)\nNon-trainable params: 0 (0.00 Byte)\n_________________________________________________________________\nEpoch 1/20\n1088/1088 [==============================] - 30s 26ms/step - loss: 2.1202 - accuracy: 0.3787 - val_loss: 0.9855 - val_accuracy: 0.7272\nEpoch 2/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.7899 - accuracy: 0.7440 - val_loss: 0.4561 - val_accuracy: 0.8832\nEpoch 3/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.4465 - accuracy: 0.8572 - val_loss: 0.3518 - val_accuracy: 0.9048\nEpoch 4/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.3129 - accuracy: 0.9022 - val_loss: 0.2557 - val_accuracy: 0.9404\nEpoch 5/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.2312 - accuracy: 0.9286 - val_loss: 0.2382 - val_accuracy: 0.9401\nEpoch 6/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.1937 - accuracy: 0.9407 - val_loss: 0.2417 - val_accuracy: 0.9499\nEpoch 7/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.1663 - accuracy: 0.9496 - val_loss: 0.2067 - val_accuracy: 0.9562\nEpoch 8/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.1482 - accuracy: 0.9556 - val_loss: 0.2554 - val_accuracy: 0.9560\nEpoch 9/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.1213 - accuracy: 0.9636 - val_loss: 0.2425 - val_accuracy: 0.9528\nEpoch 10/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.1220 - accuracy: 0.9645 - val_loss: 0.2219 - val_accuracy: 0.9624\nEpoch 11/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.1030 - accuracy: 0.9690 - val_loss: 0.1368 - val_accuracy: 0.9712\nEpoch 12/20\n1088/1088 [==============================] - 28s 25ms/step - loss: 0.0873 - accuracy: 0.9733 - val_loss: 0.2621 - val_accuracy: 0.9556\nEpoch 13/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0916 - accuracy: 0.9724 - val_loss: 0.1949 - val_accuracy: 0.9658\nEpoch 14/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0889 - accuracy: 0.9726 - val_loss: 0.1553 - val_accuracy: 0.9653\nEpoch 15/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0823 - accuracy: 0.9753 - val_loss: 0.1641 - val_accuracy: 0.9696\nEpoch 16/20\n1088/1088 [==============================] - 29s 26ms/step - loss: 0.0720 - accuracy: 0.9790 - val_loss: 0.1922 - val_accuracy: 0.9642\nEpoch 17/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0738 - accuracy: 0.9791 - val_loss: 0.1559 - val_accuracy: 0.9723\nEpoch 18/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0630 - accuracy: 0.9817 - val_loss: 0.1807 - val_accuracy: 0.9757\nEpoch 19/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0640 - accuracy: 0.9801 - val_loss: 0.1601 - val_accuracy: 0.9732\nEpoch 20/20\n1088/1088 [==============================] - 28s 26ms/step - loss: 0.0662 - accuracy: 0.9811 - val_loss: 0.1459 - val_accuracy: 0.9728\n","output_type":"stream"}],"execution_count":30},{"cell_type":"markdown","source":"## Adım 4: Model Değerlendirme\nBu bölümde, modelin test setindeki performansını değerlendiriyoruz, doğruluk/kayıp grafiklerini çiziyoruz, karışıklık matrisi ve sınıflandırma raporu oluşturuyoruz.","metadata":{}},{"cell_type":"code","source":"# Modeli test setinde değerlendir\ntest_loss, test_accuracy = model.evaluate(X_test, y_test, verbose=0)\nprint(f\"Test kaybı: {test_loss:.4f}, Test doğruluğu: {test_accuracy:.4f}\")\n\n# Doğruluk ve kayıp grafikleri\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(12, 4))\n\n# Doğruluk grafiği\nplt.subplot(1, 2, 1)\nplt.plot(history.history['accuracy'], label='Eğitim Doğruluğu')\nplt.plot(history.history['val_accuracy'], label='Doğrulama Doğruluğu')\nplt.title('Model Doğruluğu')\nplt.xlabel('Epoch')\nplt.ylabel('Doğruluk')\nplt.legend()\n\n# Kayıp grafiği\nplt.subplot(1, 2, 2)\nplt.plot(history.history['loss'], label='Eğitim Kaybı')\nplt.plot(history.history['val_loss'], label='Doğrulama Kaybı')\nplt.title('Model Kaybı')\nplt.xlabel('Epoch')\nplt.ylabel('Kayıp')\nplt.legend()\nplt.show()\n\n# Karışıklık matrisi\nfrom sklearn.metrics import confusion_matrix\nimport seaborn as sns\ny_pred = model.predict(X_test)\ny_pred_classes = np.argmax(y_pred, axis=1)\ncm = confusion_matrix(y_test, y_pred_classes)\nplt.figure(figsize=(10, 8))\nsns.heatmap(cm, annot=False, cmap='Blues')\nplt.title('Karışıklık Matrisi')\nplt.xlabel('Tahmin Edilen')\nplt.ylabel('Gerçek')\nplt.show()\n\n# Sınıflandırma raporu\nfrom sklearn.metrics import classification_report\nprint(\"Sınıflandırma Raporu:\")\nprint(classification_report(y_test, y_pred_classes))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:26:31.780110Z","iopub.execute_input":"2025-09-23T14:26:31.780394Z","iopub.status.idle":"2025-09-23T14:26:37.468326Z","shell.execute_reply.started":"2025-09-23T14:26:31.780370Z","shell.execute_reply":"2025-09-23T14:26:37.467689Z"}},"outputs":[{"name":"stdout","text":"Test kaybı: 0.2638, Test doğruluğu: 0.9513\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x400 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"395/395 [==============================] - 2s 5ms/step\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x800 with 2 Axes>","image/png":"\n"},"metadata":{}},{"name":"stdout","text":"Sınıflandırma Raporu:\n              precision    recall  f1-score   support\n\n           0       0.72      1.00      0.84        60\n           1       0.92      0.98      0.95       720\n           2       0.98      0.95      0.96       750\n           3       0.99      0.94      0.96       450\n           4       0.99      0.98      0.98       660\n           5       0.95      0.91      0.93       630\n           6       1.00      0.87      0.93       150\n           7       0.97      0.95      0.96       450\n           8       0.91      1.00      0.95       450\n           9       1.00      1.00      1.00       480\n          10       1.00      0.99      1.00       660\n          11       0.85      0.92      0.88       420\n          12       1.00      0.92      0.96       690\n          13       0.99      1.00      0.99       720\n          14       0.92      1.00      0.96       270\n          15       0.94      0.98      0.96       210\n          16       1.00      1.00      1.00       150\n          17       1.00      0.94      0.97       360\n          18       0.99      0.78      0.87       390\n          19       1.00      0.98      0.99        60\n          20       0.86      1.00      0.92        90\n          21       0.81      0.67      0.73        90\n          22       1.00      0.77      0.87       120\n          23       0.97      1.00      0.99       150\n          24       0.89      0.94      0.91        90\n          25       0.93      0.91      0.92       480\n          26       0.84      0.97      0.90       180\n          27       0.49      0.80      0.61        60\n          28       0.99      0.91      0.95       150\n          29       0.73      1.00      0.84        90\n          30       0.77      0.83      0.80       150\n          31       1.00      0.98      0.99       270\n          32       0.90      1.00      0.94        60\n          33       0.95      1.00      0.97       210\n          34       0.98      1.00      0.99       120\n          35       0.96      0.98      0.97       390\n          36       0.91      1.00      0.95       120\n          37       1.00      1.00      1.00        60\n          38       0.99      0.99      0.99       690\n          39       0.93      0.93      0.93        90\n          40       0.99      0.94      0.97        90\n          41       0.98      0.93      0.96        60\n          42       0.95      0.99      0.97        90\n\n    accuracy                           0.95     12630\n   macro avg       0.93      0.94      0.93     12630\nweighted avg       0.96      0.95      0.95     12630\n\n","output_type":"stream"}],"execution_count":31},{"cell_type":"markdown","source":"## Adım 4.1: Grad-CAM Görselleştirme\nModelin test görüntülerinde hangi bölgelere odaklandığını Grad-CAM ile görselleştiriyoruz.","metadata":{}},{"cell_type":"code","source":"# tf-keras-vis kütüphanesini yükle\n!pip install tf-keras-vis\nfrom tf_keras_vis.gradcam import Gradcam\n\n# Grad-CAM fonksiyonları\ndef get_img_array(img):\n    img = img[np.newaxis, ...]\n    return img\n\ndef loss(output):\n    return output[0][np.argmax(output[0])]\n\n# Grad-CAM görselleştirme\ngradcam = Gradcam(model, model_modifier=None, clone=False)\nsample_img = X_test[0]  # Test setinden bir görüntü\ncam = gradcam(loss, get_img_array(sample_img), penultimate_layer=-1)\n\n# Görüntü ve Grad-CAM'i göster\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(8, 4))\nplt.subplot(1, 2, 1)\nplt.imshow(sample_img)\nplt.title('Örnek Görüntü')\nplt.axis('off')\nplt.subplot(1, 2, 2)\nplt.imshow(sample_img)\nplt.imshow(cam[0], cmap='jet', alpha=0.5)  # Batch boyutunu kaldırdık\nplt.title('Grad-CAM')\nplt.axis('off')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:26:37.469000Z","iopub.execute_input":"2025-09-23T14:26:37.469233Z","iopub.status.idle":"2025-09-23T14:26:40.761996Z","shell.execute_reply.started":"2025-09-23T14:26:37.469213Z","shell.execute_reply":"2025-09-23T14:26:40.761307Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: tf-keras-vis in /usr/local/lib/python3.11/dist-packages (0.8.7)\nRequirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from tf-keras-vis) (1.15.3)\nRequirement already satisfied: pillow in /usr/local/lib/python3.11/dist-packages (from tf-keras-vis) (11.2.1)\nRequirement already satisfied: deprecated in /usr/local/lib/python3.11/dist-packages (from tf-keras-vis) (1.2.18)\nRequirement already satisfied: imageio in /usr/local/lib/python3.11/dist-packages (from tf-keras-vis) (2.37.0)\nRequirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from tf-keras-vis) (25.0)\nRequirement already satisfied: wrapt<2,>=1.10 in /usr/local/lib/python3.11/dist-packages (from deprecated->tf-keras-vis) (1.14.2)\nRequirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from imageio->tf-keras-vis) (1.26.4)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy->imageio->tf-keras-vis) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy->imageio->tf-keras-vis) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy->imageio->tf-keras-vis) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy->imageio->tf-keras-vis) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy->imageio->tf-keras-vis) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy->imageio->tf-keras-vis) (2.4.1)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->imageio->tf-keras-vis) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->imageio->tf-keras-vis) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy->imageio->tf-keras-vis) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy->imageio->tf-keras-vis) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy->imageio->tf-keras-vis) (2024.2.0)\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<Figure size 800x400 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":32},{"cell_type":"markdown","source":"## Adım 5: Hiperparametre Optimizasyonu\nKeras Tuner ile modelin hiperparametrelerini optimize ediyoruz (filtre sayısı, dense katman boyutu, dropout oranı, öğrenme oranı).","metadata":{}},{"cell_type":"code","source":"# Keras Tuner'ı yükle\n!pip install keras-tuner\nfrom keras_tuner import RandomSearch\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout\n\n# Model oluşturma fonksiyonu\ndef build_model(hp):\n    model = Sequential([\n        Conv2D(hp.Int('filters1', 16, 64, step=16), (3, 3), activation='relu', input_shape=X_train.shape[1:]),\n        MaxPooling2D((2, 2)),\n        Conv2D(hp.Int('filters2', 32, 128, step=32), (3, 3), activation='relu'),\n        MaxPooling2D((2, 2)),\n        Flatten(),\n        Dense(hp.Int('dense_units', 64, 256, step=64), activation='relu'),\n        Dropout(hp.Float('dropout', 0.2, 0.5, step=0.1)),\n        Dense(43, activation='softmax')\n    ])\n    model.compile(\n        optimizer=tf.keras.optimizers.Adam(hp.Float('learning_rate', 1e-4, 1e-2, sampling='log')),\n        loss='sparse_categorical_crossentropy',\n        metrics=['accuracy']\n    )\n    return model\n\n# RandomSearch ile hiperparametre optimizasyonu\ntuner = RandomSearch(\n    build_model,\n    objective='val_accuracy',\n    max_trials=5,\n    executions_per_trial=1,\n    directory='tuner',\n    project_name='traffic_signs'\n)\n\n# Arama yap\ntuner.search(train_generator, epochs=10, validation_data=valid_generator)\n\n# En iyi modeli al\nbest_model = tuner.get_best_models(num_models=1)[0]\n\n# En iyi modeli test setinde değerlendir\ntest_loss, test_accuracy = best_model.evaluate(X_test, y_test, verbose=0)\nprint(f\"En iyi model - Test kaybı: {test_loss:.4f}, Test doğruluğu: {test_accuracy:.4f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:26:40.763090Z","iopub.execute_input":"2025-09-23T14:26:40.763352Z","iopub.status.idle":"2025-09-23T14:26:46.572593Z","shell.execute_reply.started":"2025-09-23T14:26:40.763329Z","shell.execute_reply":"2025-09-23T14:26:46.571720Z"}},"outputs":[{"name":"stdout","text":"Requirement already satisfied: keras-tuner in /usr/local/lib/python3.11/dist-packages (1.4.7)\nRequirement already satisfied: keras in /usr/local/lib/python3.11/dist-packages (from keras-tuner) (2.15.0)\nRequirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from keras-tuner) (25.0)\nRequirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from keras-tuner) (2.32.4)\nRequirement already satisfied: kt-legacy in /usr/local/lib/python3.11/dist-packages (from keras-tuner) (1.0.5)\nRequirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->keras-tuner) (3.4.2)\nRequirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->keras-tuner) (3.10)\nRequirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->keras-tuner) (2.5.0)\nRequirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->keras-tuner) (2025.6.15)\nReloading Tuner from tuner/traffic_signs/tuner0.json\nEn iyi model - Test kaybı: 0.4482, Test doğruluğu: 0.9148\n","output_type":"stream"}],"execution_count":33},{"cell_type":"markdown","source":"## Adım 6: Proje Finalizasyonu\nModeli kaydediyoruz ve projeyi GitHub ile paylaşmak için hazırlıyoruz.","metadata":{}},{"cell_type":"code","source":"# Modeli kaydet\nbest_model.save('traffic_signs_model.h5')\nprint(\"Model 'traffic_signs_model.h5' olarak kaydedildi.\")\n\n# README içeriğini bir dosyaya yaz\nwith open('README.md', 'w') as f:\n    f.write(\"\"\"\n# Trafik İşaretleri Sınıflandırma Projesi\n\n## Proje Özeti\nBu proje, Akbank Derin Öğrenme Bootcamp kapsamında geliştirilmiştir. Trafik İşaretleri veri seti kullanılarak 43 farklı trafik işaretini sınıflandırmak için bir CNN modeli oluşturulmuştur.\n\n## Adımlar\n1. **Veri Ön İşleme**: Veri seti yüklendi, normalleştirildi, veri çoğaltma uygulandı.\n2. **Model Geliştirme**: CNN modeli oluşturuldu ve eğitildi (%94.86 test doğruluğu).\n3. **Değerlendirme**: Test setinde doğruluk/kayıp, karışıklık matrisi ve sınıflandırma raporu üretildi.\n4. **Grad-CAM**: Modelin odaklandığı bölgeler görselleştirildi.\n5. **Hiperparametre Optimizasyonu**: Keras Tuner ile model iyileştirildi (Test doğruluğu: %91.48).\n\n## Sonuçlar\n- İlk Model Test Doğruluğu: %94.86\n- En İyi Model Test Doğruluğu: %91.48\n- Veri Seti: 34799 eğitim, 4410 doğrulama, 12630 test örneği\n- Sınıf Sayısı: 43\n- Görüntü Boyutu: 32x32x3\n\n## Kullanılan Kütüphaneler\n- TensorFlow, Keras, Keras Tuner, tf-keras-vis\n- NumPy, Pandas, Matplotlib, Seaborn, Scikit-learn\n\n## Kurulum\n```bash\npip install tensorflow keras-tuner tf-keras-vis numpy pandas matplotlib seaborn scikit-learn\n```\n\n## Kaggle Notebook\n[Kaggle notebook linkini buraya ekle]\n\n## Lisans\nMIT License\n\"\"\")\nprint(\"README.md dosyası oluşturuldu, GitHub'a yüklemek için indirin.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:32:33.025754Z","iopub.execute_input":"2025-09-23T14:32:33.026455Z","iopub.status.idle":"2025-09-23T14:32:33.057202Z","shell.execute_reply.started":"2025-09-23T14:32:33.026430Z","shell.execute_reply":"2025-09-23T14:32:33.056581Z"}},"outputs":[{"name":"stdout","text":"Model 'traffic_signs_model.h5' olarak kaydedildi.\nREADME.md dosyası oluşturuldu, GitHub'a yüklemek için indirin.\n","output_type":"stream"},{"name":"stderr","text":"/usr/local/lib/python3.11/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n  saving_api.save_model(\n","output_type":"stream"}],"execution_count":37},{"cell_type":"code","source":"best_model.save('traffic_signs_model.keras')\nprint(\"Model 'traffic_signs_model.keras' olarak kaydedildi.\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:34:31.254788Z","iopub.execute_input":"2025-09-23T14:34:31.255125Z","iopub.status.idle":"2025-09-23T14:34:31.292632Z","shell.execute_reply.started":"2025-09-23T14:34:31.255104Z","shell.execute_reply":"2025-09-23T14:34:31.291889Z"}},"outputs":[{"name":"stdout","text":"Model 'traffic_signs_model.keras' olarak kaydedildi.\n","output_type":"stream"}],"execution_count":38},{"cell_type":"code","source":"import os\nworking_dir = '/kaggle/working/'\nfiles = os.listdir(working_dir)\nprint(\"Kaggle working klasöründeki dosyalar:\")\nfor file in files:\n    print(f\"- {file} (Boyut: {os.path.getsize(os.path.join(working_dir, file))} bytes)\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-09-23T14:39:39.862418Z","iopub.execute_input":"2025-09-23T14:39:39.862945Z","iopub.status.idle":"2025-09-23T14:39:39.867566Z","shell.execute_reply.started":"2025-09-23T14:39:39.862923Z","shell.execute_reply":"2025-09-23T14:39:39.866940Z"}},"outputs":[{"name":"stdout","text":"Kaggle working klasöründeki dosyalar:\n- traffic_signs_model.keras (Boyut: 2779956 bytes)\n- .virtual_documents (Boyut: 4096 bytes)\n- README.md (Boyut: 1291 bytes)\n- traffic_signs_model.h5 (Boyut: 2774608 bytes)\n- tuner (Boyut: 4096 bytes)\n","output_type":"stream"}],"execution_count":39},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}
